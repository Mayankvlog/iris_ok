jobs:
  build:
    docker:
      - image: python:3.8

    working_directory: /app

    steps:
      - checkout

      - run:
          name: Install dependencies
          command: |
            pip install -r requirements.txt

      - run:
          name: List Files
          command: |
            ls -R /app

      - run:
          name: Run tests
          command: |
            pytest
            # Save test results
            echo "Your test results content" > /app/test-results.xml

      - persist_to_workspace:
          root: /app
          paths:
            - models/
            - test-results.xml  # Make sure this path is correct

  deploy:
    docker:
      - image: python:3.8

    working_directory: /app

    steps:
      - attach_workspace:
          at: /app

      - run:
          name: Deploy to Production
          command: |
            # Add deployment commands here
            # e.g., streamlit run your_app.py

  store_test_results:
    docker:
      - image: python:3.8

    working_directory: /app

    steps:
      - attach_workspace:
          at: /app

      - run:
          name: Store Test Results
          command: |
            mkdir -p /app/test-report
            mv /app/test-results.xml /app/test-report/
            echo "Found some test results!" > /app/test-report/test-results-info.xml

      - publish_test_results:
          test_results_format: JUnit
          test_results_files: '**/test-report/test-results.xml'
          fail_if_no_tests: false

  store_artifacts:
    docker:
      - image: python:3.8

    working_directory: /app

    steps:
      - attach_workspace:
          at: /app

      - run:
          name: Store Artifacts
          command: |
            mkdir -p /app/artifacts
            mv /app/artifacts/dummy.txt /app/artifacts/
            echo "Stored some artifacts!" > /app/artifacts/artifacts-info.txt

      - publish_artifacts:
          path: /app/artifacts
          name: Artifacts

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - store_test_results:
          requires:
            - build
      - store_artifacts:
          requires:
            - deploy
